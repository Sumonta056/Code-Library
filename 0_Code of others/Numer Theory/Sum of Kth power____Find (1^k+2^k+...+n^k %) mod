///complexity 2^k
///faulhaber(n,k) gives the answer
#define MAX 2505
int S[MAX][MAX], inv[MAX];
///generate stirling numbers of the 2nd kind
void stirling()
{
    int i, j;
    for (i = 0; i < MAX; i++) inv[i] = qpow(i,mod-2);
    S[0][0] = 1;
    for (i = 1; i < MAX; i++)
    {
        S[i][0] = 0;
        for (j = 1; j <= i; j++)
        {
            S[i][j] = ( ((long long)S[i - 1][j] * j) + S[i - 1][j - 1]) % mod;
        }
    }
}
///this part is O(k)
int faulhaber(long long n, int k)
{
    n %= mod;
    if (!k) return n;
    long long res = 0, p = 1;
    for (int j = 0; j <= k; j++)
    {
        p = (p * (n + 1 - j)) % mod;
        res = (res + (((S[k][j] * p) % mod) * inv[j + 1])) % mod;
    }
    return (res % mod);
}
