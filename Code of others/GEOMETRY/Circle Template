/// if 3 points A,B,C passes through a circle then center
pt circleCenter(pt a, pt b, pt c){ b= b-a; c= c-a; assert(cross(b,c)!=0) ; return a+ RotateCCW90(b*sq(c) - c*sq(b))/cross(b,c)/2 ; }

/// circle line intersection point :  return type : how many points intersect
int CircleLineInter(pt o, double r, line l, pair<pt,pt>&out)
{   double h2= r*r - l.sqdist(o);
    if(h2>=0) { pt p= l.proj(o); pt h=l.v*sqrt(h2)/abs(l.v); out={p-h,p+h}; }
    return 1+sgn(h2);  }

/// circle circle intersection point : return type : how many points intersect
int CircleCircleIntersection(pt o1,double r1, pt o2, double r2,pair<pt,pt> & out){
    pt d=o2-o1; double d2=sq(d);
    if(d2==0) { assert(r1!=r2); return 0; }
    double pd=(d2+r1*r1 - r2*r2)/2;
    double h2 = r1*r1 - pd*pd/d2;
    if(h2>=0){ pt p= o1+d*pd/d2 , h= RotateCCW90(d)* sqrt(h2/d2) ; out={p-h,p+h}; }
    return 1+sgn(h2); }

/// tangent lines : two circle sporshok , where sporshok gula perpendicular  : outer r2=r2 : inner : r2=-r2 : return type how many tangent line/2
int  tangents(pt o1,double r1, pt o2, double r2,bool inner, vector< pair<pt,pt> > &out){
    if(inner) r2=-r2;
    pt d= o2-o1; double dr=r1-r2,d2=sq(d),h2=d2-dr*dr;
    if(d2==0 || h2<0){ assert(h2!=0); return 0;}
    for(double sign : {-1,1}){
        pt v=(d*dr + RotateCCW90(d)*sqrt(h2)*sign)/d2;
        out.pb({o1+v*r1 , o2 + v*r2}); } return 1+ (h2>0) ;}
/// circle circle intersection
double Areaa(double r, double a) {
  return r * r * 0.5 * (a - sin(a));
}
double CircleCircleIntersectionArea(double x, double y, double r,double x1,double y1,double r1;)
  double d = sqrt(dist2(pt(x, y), pt(x1, y1)));
  if (d >= r + r1) {
    return 0;}
  if (d + r <= r1) {
    return pi*r*r;
  }
  if (d + r1 <= r) {
    return pi*r1*r1;
  }
  double ans = Areaa(r, 2 * acos((r * r + d * d - r1 * r1) / (2.0 * r * d)));
  ans += Areaa(r1, 2 * acos((r1 * r1 + d * d - r * r) / (2.0 * r1 * d)));
  return ans; }
